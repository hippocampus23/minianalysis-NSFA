function groupIndex = addGroup(groupIndex,filters,groupName)
%% Add a group to a table which stores grouping information.
% Man Ho Wong, University of Pittsburgh.
% -------------------------------------------------------------------------
% Inputs: - groupIndex : A table where grouping info will be stored; 
%                        Pass an empty table to start fresh. 
%         - filters : A struct with values of different variables stored in
%                     different fields; can be generated by setFilters.m
%         - groupName : name of the group to be added
% Output: - groupIndex : New group will be added as a new row;
%                        existing group will be overwritten with new values

%% Check if the group being added already exists

if ismember(groupName,groupIndex.Properties.RowNames) == true
    quest = "'"+ groupName + "' already exists! Do you want to overwrite it?";
    response = questdlg(quest,'Existing group','Yes','No','No');
    switch response
        case {'No',''}
            fprintf('Action cancelled!\n');
            return
    end
end

%% Add a group to groupIndex

% Get a list of factors from 'filters'
factors = fieldnames(filters);

% Add factors as column names if 'groupIndex' is an empty table
if isempty(groupIndex)
    groupIndex(groupName,:) = cell(1,length(factors));
    groupIndex.Properties.VariableNames = factors;
end

% Prevent warning
warning('off','MATLAB:table:RowsAddedExistingVars');

% Copy filter values to 'groupIndex'
nFactors = length(factors);
for k=1:nFactors
    groupIndex.(factors{k}){groupName} = filters.(factors{k});
end

fprintf('Done! ''%s'' was added to ''groupIndex''.\n', groupName);

end