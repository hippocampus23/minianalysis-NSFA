function [allparams,allgof] = fitEachRecGamma(groupedData,group)
% fitEachRecGamma: Fit each recording of a group to truncated gamma model.
% This function requires data organized in Man Ho's data structure (see
% analyzeMini.mlx). It runs the function gammafit on each recording of a
% user-defined group. Graphs and parameter values of left-truncated gamma
% model for each recording are generated.

% Input:
%   groupedData: dataset containing grouped data (by default, this is
%                'groupedData' generated by analyzeMini.mlx)
%   group: name of the group in groupedData (e.g. 'maleControl')

% Output:
%   allparams and allgof are optional
%   allparams: parameters of left-truncated gamma model
%              (column 1-6: alpha, alpha CI, beta, beta CI, mean, mean CI)
%   allgof: goodness-of-fit results otained by comparing amplitude data to
%           left-truncated Gamma model with MATLAB function kstest2
%           (column 1-3: null hypothesis decision, p value, KS statistic)
%   
%   The function generates:
%   - screen output: number of analyzed events each recording
%   - a figure containing plots of the fitted data for each recording;
%   - gammastats_all.mat containing allparams, allgof, allfiles (file names
%     of recordings) for the group.
%   - The above files are saved in ../analysis/gammaFitting/groupName/

% Note: This function was adapted from run_gammafit.m to fit Man Ho's data
% structure. 

%% Read data and initialize variables

data = groupedData.events{group};
allfiles=data.fileName(:,1);
allparams=zeros(height(data),6);
allgof=zeros(height(data),3);

%threshold: event filtering thresholds (4 numbers):
%           {min iei, [min rise time, max rise time], min amplitude}
%           by default: {0, [0 99], 0} (should include all events)
threshold = {0, [0 99], 0}; 

outputDir = ['analysis/gammaFitting/' char(group) '/'];
mkdir(outputDir);

%% Fit each recording to gamma model and save outputs

for iRecording=1:height(data)
    % Fit gamma model
    [allparams(iRecording,:),allgof(iRecording,:)]= ...
        gammafit(table2array(data.events{iRecording}),threshold);
    % Save plot of interest
    saveas(gcf,[outputDir data.fileName{iRecording}(1:end-4) '_gamma.fig']);
    close(gcf);
end
save([outputDir 'gammastats_all.mat'],'allfiles','allparams','allgof');
addpath(genpath(outputDir)); % Add newly created folders/files to path
end
